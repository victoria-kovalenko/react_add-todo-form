{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","id","username","ariaLabel","getUserById","userId","usersFromServer","find","preparedTodo","App","useState","selectedUserId","setSelectedUserId","setTodos","setTitle","selectedUserIdError","setSelectedUserIdError","titleError","setTitleError","action","method","onSubmit","event","preventDefault","array","newTodo","Math","max","el","type","placeholder","value","onChange","target","inputProps","cn","errorVisible","Boolean","NativeSelect","disabled","Button","variant","endIcon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff1beb67.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': completed },\n    )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { FormEvent, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/material/Icon';\nimport Input from '@mui/material/TextField';\nimport NativeSelect from '@mui/material/NativeSelect';\nimport './App.scss';\nimport cn from 'classnames';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst ariaLabel = { 'aria-label': 'description' };\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const preparedTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const getNewId = (array: { id: number }[]) => (\n  Math.max(...array.map(el => el.id)) + 1\n);\n\nexport const App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState(preparedTodo);\n  const [title, setTitle] = useState('');\n\n  const [selectedUserIdError, setSelectedUserIdError] = useState('');\n  const [titleError, setTitleError] = useState('');\n\n  const reset = () => {\n    setSelectedUserId(0);\n    setTitle('');\n  };\n\n  const hadleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedUserId || !title) {\n      setSelectedUserIdError(!selectedUserId ? 'Please choose a user' : '');\n      setTitleError(!title ? 'Please enter a title' : '');\n\n      return;\n    }\n\n    const newTodo:Todo = {\n      id: getNewId(todos),\n      userId: selectedUserId,\n      title,\n      completed: false,\n      user: getUserById(selectedUserId),\n    };\n\n    setTodos(\n      [...todos, newTodo],\n    );\n\n    reset();\n  };\n\n  const handleChangeNewSelectedUserId = (value: string) => {\n    setSelectedUserId(+value);\n    setSelectedUserIdError('');\n  };\n\n  const handleChangeNewTitle = (value: string) => {\n    setTitle(value);\n    setTitleError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={hadleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <Input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={\n                (event) => handleChangeNewTitle(event.target.value)\n              }\n              inputProps={ariaLabel}\n            />\n          </label>\n          <span className={cn('error', { errorVisible: Boolean(titleError) })}>\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            {/* <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={\n                (event) => handleChangeNewSelectedUserId(event.target.value)\n              }\n            >\n              <option value={0} disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select> */}\n\n            <NativeSelect\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={\n                (event) => handleChangeNewSelectedUserId(event.target.value)\n              }\n            >\n              <option value={0} disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </NativeSelect>\n          </label>\n\n          <span\n            className={cn('error', {\n              errorVisible: Boolean(selectedUserIdError),\n            })}\n          >\n            Please choose a user\n          </span>\n        </div>\n        <Button\n          variant=\"contained\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </Button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}